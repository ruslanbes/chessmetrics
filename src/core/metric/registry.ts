// This file is auto-generated by build-scripts/generate-metrics-registry.ts
// Do not edit manually - it will be overwritten on next build

import { NumberOfWhiteAttackersMetric } from '../../metrics/square/numberOfWhiteAttackers/numberOfWhiteAttackers'
import { NumberOfBlackAttackersMetric } from '../../metrics/square/numberOfBlackAttackers/numberOfBlackAttackers'
import { IsMyTurnMetric } from '../../metrics/player/isMyTurn/isMyTurn'
import { IsHangingMetric } from '../../metrics/piece/isHanging/isHanging'
import { FreedomMetric } from '../../metrics/piece/freedom/freedom'

export const METRIC_REGISTRY = {
  square: [NumberOfWhiteAttackersMetric, NumberOfBlackAttackersMetric],
  player: [IsMyTurnMetric],
  piece: [IsHangingMetric, FreedomMetric],
} as const

export const METRIC_METADATA = {
  square: {
    'square.numberOfWhiteAttackers': {
      name: 'square.numberOfWhiteAttackers',
      type: 'number',
      category: 'square',
      className: 'NumberOfWhiteAttackersMetric'
    },
    'square.numberOfBlackAttackers': {
      name: 'square.numberOfBlackAttackers',
      type: 'number',
      category: 'square',
      className: 'NumberOfBlackAttackersMetric'
    },
  },
  player: {
    'player.isMyTurn': {
      name: 'player.isMyTurn',
      type: 'boolean',
      category: 'player',
      className: 'IsMyTurnMetric'
    },
  },
  piece: {
    'piece.isHanging': {
      name: 'piece.isHanging',
      type: 'boolean',
      category: 'piece',
      className: 'IsHangingMetric'
    },
    'piece.freedom': {
      name: 'piece.freedom',
      type: 'number',
      category: 'piece',
      className: 'FreedomMetric'
    },
  },
} as const

export type MetricCategory = keyof typeof METRIC_REGISTRY

export type MetricClass = {
  dependencies: string[]
  calculate: (...args: any[]) => any
}

export type MetricRegistry = {
  [K in MetricCategory]: MetricClass[]
}

export type MetricMetadata = typeof METRIC_METADATA